name: Deploy backend

on:
  push:
    paths:
      - backend/
  workflow_dispatch:

env:
  IMAGE_URI: ${{ vars.ECR_REPOSITORY }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Initial setup
      - name: checkout
        uses: actions/checkout@v2
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # build and push this image
      - name: login ECR repository
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: build and push the image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: logout
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      # Insert Image URI to Task Definition
      - name: render new task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: api-task-def.json
          container-name: api
          image: ${{ steps.login-ecr.outputs.registry }}/sdx_node_web:${{ github.sha }}

      # Update Task Definition
      - name: register new task definition family
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          cluster: ecs-cluster